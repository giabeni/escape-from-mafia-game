[gd_resource type="VisualShader" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=2]

[sub_resource type="VisualShaderNodeVec3Constant" id=3]
constant = Vector3( 0, 50, 0 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// Vector:4
	vec3 n_out4p0 = vec3(0.000000, 50.000004, 0.000000);

// VectorOp:3
	vec3 n_out3p0 = n_out2p0 + n_out4p0;

// Output:0
	VERTEX = n_out3p0;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 267.48, -18.26 )
nodes/vertex/0/position = Vector2( 1280, 100 )
nodes/vertex/2/node = SubResource( 1 )
nodes/vertex/2/position = Vector2( 640, 140 )
nodes/vertex/3/node = SubResource( 2 )
nodes/vertex/3/position = Vector2( 990.48, 54.74 )
nodes/vertex/4/node = SubResource( 3 )
nodes/vertex/4/position = Vector2( 600, 280 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1420, 120 )
